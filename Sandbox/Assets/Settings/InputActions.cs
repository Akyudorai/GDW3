//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Settings/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""66d0f867-2e59-4358-97f4-fb776fbb434d"",
            ""actions"": [
                {
                    ""name"": ""Jump"",
                    ""type"": ""Value"",
                    ""id"": ""11767c9e-bbed-4908-b6e4-b6d598066f7f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""11813332-02b9-42cf-bfe5-08f5a62715b0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""6b33240f-026b-445a-b327-df9b9dd17bf7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Value"",
                    ""id"": ""42ab45f1-e199-41ea-9434-4c5616fe0568"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""EnableCheats"",
                    ""type"": ""Value"",
                    ""id"": ""3d154865-715c-47f9-9025-bf141d85dd3e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Escape"",
                    ""type"": ""Value"",
                    ""id"": ""ad291901-7022-4363-9d91-50924ecabf72"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Shift"",
                    ""type"": ""Value"",
                    ""id"": ""fc6b43a7-80bc-45ce-988c-05326d5a127b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""cee91258-70cb-4da7-8882-63591c1a0aef"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""825fef9d-daa6-4bdd-a3ec-2133ae62ae8f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1fd61cc1-1351-424d-88da-0dbc1c63fae2"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""27e68dd5-08d9-4f59-9c6f-9d6adc8a24c1"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2afb2351-1083-4ae9-b114-407699bd0afa"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1b1758a3-3f13-46ee-ab67-b204d5f886d5"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0ba69bff-776f-4403-9b86-c701e3c85df0"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6bdb4c7-4e57-482c-9b33-91ca0a10b3f2"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f66a2a1-e6dd-4887-a2fd-7f99ae1efd6b"",
                    ""path"": ""<Keyboard>/backquote"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EnableCheats"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""989c1207-8f7b-42d5-9fb9-b0880fcdc1ce"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a59b1c5d-074a-4553-963e-bf765d40e1a4"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Cheats"",
            ""id"": ""cf15d783-4085-4410-8295-3311bd6df898"",
            ""actions"": [
                {
                    ""name"": ""Sunrise"",
                    ""type"": ""Value"",
                    ""id"": ""316f5400-0c49-4f6c-8008-4f5a7bec0c8a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Noon"",
                    ""type"": ""Value"",
                    ""id"": ""82d5c0b5-6c3a-4e8a-94af-c71555e45b76"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Sunset"",
                    ""type"": ""Value"",
                    ""id"": ""16bc641d-816b-4b4a-b107-603c8b4d8cbb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Midnight"",
                    ""type"": ""Value"",
                    ""id"": ""b622b4e6-f8f6-437e-b2fb-ff070ec9050c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MoneyUp"",
                    ""type"": ""Value"",
                    ""id"": ""ca3fda42-ab43-4571-9d37-b2783196dc2c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MoneyDown"",
                    ""type"": ""Value"",
                    ""id"": ""6c5d44bd-050d-46ef-8ebe-562b32f94b77"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TeleportApartments"",
                    ""type"": ""Value"",
                    ""id"": ""bd27beb3-91ed-4245-8481-85b1961f4d6f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TeleportParking"",
                    ""type"": ""Value"",
                    ""id"": ""a4554822-e2a6-4530-a6cd-e53b587b3535"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TeleportMall"",
                    ""type"": ""Value"",
                    ""id"": ""aaf888bb-1e36-49e1-a459-da7a03230d17"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TeleportConyard"",
                    ""type"": ""Value"",
                    ""id"": ""46a657ef-05b2-4e1a-b807-89f92b506107"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TeleportUnderpass"",
                    ""type"": ""Value"",
                    ""id"": ""6620cd0b-5f50-44a9-b7a6-af3da35ee0d5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2411decf-23f0-4158-8420-a6b1bb976288"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sunrise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61a3e335-db39-4cfc-86b5-ec6ba18d8853"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Noon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27ee518b-70b1-4c45-bcd4-f8bfebaa86c0"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sunset"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9d459ef9-88df-4690-849e-666bc49bd61a"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Midnight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""95d34fb7-3ec3-4daa-baa5-a8dcd419b586"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoneyUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61e67cc5-58ba-49ab-935f-1ed6018b4828"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoneyDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea751727-bc1e-4479-a09d-39ba51e620a3"",
                    ""path"": ""<Keyboard>/numpad0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TeleportApartments"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""173b944d-4a5a-4474-a116-8d0b826aeb92"",
                    ""path"": ""<Keyboard>/numpad2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TeleportMall"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d61a311-9ef5-4599-8bf0-b66fca22f8d1"",
                    ""path"": ""<Keyboard>/numpad3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TeleportConyard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0de2119c-5158-4628-ba55-97bf2620466e"",
                    ""path"": ""<Keyboard>/numpad4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TeleportUnderpass"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3993fa8f-def7-4d15-9019-3c3ed6d51197"",
                    ""path"": ""<Keyboard>/numpad1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TeleportParking"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menu"",
            ""id"": ""1247957e-42f0-496b-ac6e-95c6433a5403"",
            ""actions"": [
                {
                    ""name"": ""Enter"",
                    ""type"": ""Value"",
                    ""id"": ""6a18ab29-4ec2-4169-bfb3-a833365195d8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9235d78b-07f3-4832-89f5-62c9f70ce412"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
        m_Player_Interact = m_Player.FindAction("Interact", throwIfNotFound: true);
        m_Player_EnableCheats = m_Player.FindAction("EnableCheats", throwIfNotFound: true);
        m_Player_Escape = m_Player.FindAction("Escape", throwIfNotFound: true);
        m_Player_Shift = m_Player.FindAction("Shift", throwIfNotFound: true);
        // Cheats
        m_Cheats = asset.FindActionMap("Cheats", throwIfNotFound: true);
        m_Cheats_Sunrise = m_Cheats.FindAction("Sunrise", throwIfNotFound: true);
        m_Cheats_Noon = m_Cheats.FindAction("Noon", throwIfNotFound: true);
        m_Cheats_Sunset = m_Cheats.FindAction("Sunset", throwIfNotFound: true);
        m_Cheats_Midnight = m_Cheats.FindAction("Midnight", throwIfNotFound: true);
        m_Cheats_MoneyUp = m_Cheats.FindAction("MoneyUp", throwIfNotFound: true);
        m_Cheats_MoneyDown = m_Cheats.FindAction("MoneyDown", throwIfNotFound: true);
        m_Cheats_TeleportApartments = m_Cheats.FindAction("TeleportApartments", throwIfNotFound: true);
        m_Cheats_TeleportParking = m_Cheats.FindAction("TeleportParking", throwIfNotFound: true);
        m_Cheats_TeleportMall = m_Cheats.FindAction("TeleportMall", throwIfNotFound: true);
        m_Cheats_TeleportConyard = m_Cheats.FindAction("TeleportConyard", throwIfNotFound: true);
        m_Cheats_TeleportUnderpass = m_Cheats.FindAction("TeleportUnderpass", throwIfNotFound: true);
        // Menu
        m_Menu = asset.FindActionMap("Menu", throwIfNotFound: true);
        m_Menu_Enter = m_Menu.FindAction("Enter", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Look;
    private readonly InputAction m_Player_Interact;
    private readonly InputAction m_Player_EnableCheats;
    private readonly InputAction m_Player_Escape;
    private readonly InputAction m_Player_Shift;
    public struct PlayerActions
    {
        private @InputActions m_Wrapper;
        public PlayerActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Look => m_Wrapper.m_Player_Look;
        public InputAction @Interact => m_Wrapper.m_Player_Interact;
        public InputAction @EnableCheats => m_Wrapper.m_Player_EnableCheats;
        public InputAction @Escape => m_Wrapper.m_Player_Escape;
        public InputAction @Shift => m_Wrapper.m_Player_Shift;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Jump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Look.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Interact.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @EnableCheats.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEnableCheats;
                @EnableCheats.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEnableCheats;
                @EnableCheats.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEnableCheats;
                @Escape.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEscape;
                @Escape.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEscape;
                @Escape.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEscape;
                @Shift.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShift;
                @Shift.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShift;
                @Shift.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShift;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @EnableCheats.started += instance.OnEnableCheats;
                @EnableCheats.performed += instance.OnEnableCheats;
                @EnableCheats.canceled += instance.OnEnableCheats;
                @Escape.started += instance.OnEscape;
                @Escape.performed += instance.OnEscape;
                @Escape.canceled += instance.OnEscape;
                @Shift.started += instance.OnShift;
                @Shift.performed += instance.OnShift;
                @Shift.canceled += instance.OnShift;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Cheats
    private readonly InputActionMap m_Cheats;
    private ICheatsActions m_CheatsActionsCallbackInterface;
    private readonly InputAction m_Cheats_Sunrise;
    private readonly InputAction m_Cheats_Noon;
    private readonly InputAction m_Cheats_Sunset;
    private readonly InputAction m_Cheats_Midnight;
    private readonly InputAction m_Cheats_MoneyUp;
    private readonly InputAction m_Cheats_MoneyDown;
    private readonly InputAction m_Cheats_TeleportApartments;
    private readonly InputAction m_Cheats_TeleportParking;
    private readonly InputAction m_Cheats_TeleportMall;
    private readonly InputAction m_Cheats_TeleportConyard;
    private readonly InputAction m_Cheats_TeleportUnderpass;
    public struct CheatsActions
    {
        private @InputActions m_Wrapper;
        public CheatsActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Sunrise => m_Wrapper.m_Cheats_Sunrise;
        public InputAction @Noon => m_Wrapper.m_Cheats_Noon;
        public InputAction @Sunset => m_Wrapper.m_Cheats_Sunset;
        public InputAction @Midnight => m_Wrapper.m_Cheats_Midnight;
        public InputAction @MoneyUp => m_Wrapper.m_Cheats_MoneyUp;
        public InputAction @MoneyDown => m_Wrapper.m_Cheats_MoneyDown;
        public InputAction @TeleportApartments => m_Wrapper.m_Cheats_TeleportApartments;
        public InputAction @TeleportParking => m_Wrapper.m_Cheats_TeleportParking;
        public InputAction @TeleportMall => m_Wrapper.m_Cheats_TeleportMall;
        public InputAction @TeleportConyard => m_Wrapper.m_Cheats_TeleportConyard;
        public InputAction @TeleportUnderpass => m_Wrapper.m_Cheats_TeleportUnderpass;
        public InputActionMap Get() { return m_Wrapper.m_Cheats; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CheatsActions set) { return set.Get(); }
        public void SetCallbacks(ICheatsActions instance)
        {
            if (m_Wrapper.m_CheatsActionsCallbackInterface != null)
            {
                @Sunrise.started -= m_Wrapper.m_CheatsActionsCallbackInterface.OnSunrise;
                @Sunrise.performed -= m_Wrapper.m_CheatsActionsCallbackInterface.OnSunrise;
                @Sunrise.canceled -= m_Wrapper.m_CheatsActionsCallbackInterface.OnSunrise;
                @Noon.started -= m_Wrapper.m_CheatsActionsCallbackInterface.OnNoon;
                @Noon.performed -= m_Wrapper.m_CheatsActionsCallbackInterface.OnNoon;
                @Noon.canceled -= m_Wrapper.m_CheatsActionsCallbackInterface.OnNoon;
                @Sunset.started -= m_Wrapper.m_CheatsActionsCallbackInterface.OnSunset;
                @Sunset.performed -= m_Wrapper.m_CheatsActionsCallbackInterface.OnSunset;
                @Sunset.canceled -= m_Wrapper.m_CheatsActionsCallbackInterface.OnSunset;
                @Midnight.started -= m_Wrapper.m_CheatsActionsCallbackInterface.OnMidnight;
                @Midnight.performed -= m_Wrapper.m_CheatsActionsCallbackInterface.OnMidnight;
                @Midnight.canceled -= m_Wrapper.m_CheatsActionsCallbackInterface.OnMidnight;
                @MoneyUp.started -= m_Wrapper.m_CheatsActionsCallbackInterface.OnMoneyUp;
                @MoneyUp.performed -= m_Wrapper.m_CheatsActionsCallbackInterface.OnMoneyUp;
                @MoneyUp.canceled -= m_Wrapper.m_CheatsActionsCallbackInterface.OnMoneyUp;
                @MoneyDown.started -= m_Wrapper.m_CheatsActionsCallbackInterface.OnMoneyDown;
                @MoneyDown.performed -= m_Wrapper.m_CheatsActionsCallbackInterface.OnMoneyDown;
                @MoneyDown.canceled -= m_Wrapper.m_CheatsActionsCallbackInterface.OnMoneyDown;
                @TeleportApartments.started -= m_Wrapper.m_CheatsActionsCallbackInterface.OnTeleportApartments;
                @TeleportApartments.performed -= m_Wrapper.m_CheatsActionsCallbackInterface.OnTeleportApartments;
                @TeleportApartments.canceled -= m_Wrapper.m_CheatsActionsCallbackInterface.OnTeleportApartments;
                @TeleportParking.started -= m_Wrapper.m_CheatsActionsCallbackInterface.OnTeleportParking;
                @TeleportParking.performed -= m_Wrapper.m_CheatsActionsCallbackInterface.OnTeleportParking;
                @TeleportParking.canceled -= m_Wrapper.m_CheatsActionsCallbackInterface.OnTeleportParking;
                @TeleportMall.started -= m_Wrapper.m_CheatsActionsCallbackInterface.OnTeleportMall;
                @TeleportMall.performed -= m_Wrapper.m_CheatsActionsCallbackInterface.OnTeleportMall;
                @TeleportMall.canceled -= m_Wrapper.m_CheatsActionsCallbackInterface.OnTeleportMall;
                @TeleportConyard.started -= m_Wrapper.m_CheatsActionsCallbackInterface.OnTeleportConyard;
                @TeleportConyard.performed -= m_Wrapper.m_CheatsActionsCallbackInterface.OnTeleportConyard;
                @TeleportConyard.canceled -= m_Wrapper.m_CheatsActionsCallbackInterface.OnTeleportConyard;
                @TeleportUnderpass.started -= m_Wrapper.m_CheatsActionsCallbackInterface.OnTeleportUnderpass;
                @TeleportUnderpass.performed -= m_Wrapper.m_CheatsActionsCallbackInterface.OnTeleportUnderpass;
                @TeleportUnderpass.canceled -= m_Wrapper.m_CheatsActionsCallbackInterface.OnTeleportUnderpass;
            }
            m_Wrapper.m_CheatsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Sunrise.started += instance.OnSunrise;
                @Sunrise.performed += instance.OnSunrise;
                @Sunrise.canceled += instance.OnSunrise;
                @Noon.started += instance.OnNoon;
                @Noon.performed += instance.OnNoon;
                @Noon.canceled += instance.OnNoon;
                @Sunset.started += instance.OnSunset;
                @Sunset.performed += instance.OnSunset;
                @Sunset.canceled += instance.OnSunset;
                @Midnight.started += instance.OnMidnight;
                @Midnight.performed += instance.OnMidnight;
                @Midnight.canceled += instance.OnMidnight;
                @MoneyUp.started += instance.OnMoneyUp;
                @MoneyUp.performed += instance.OnMoneyUp;
                @MoneyUp.canceled += instance.OnMoneyUp;
                @MoneyDown.started += instance.OnMoneyDown;
                @MoneyDown.performed += instance.OnMoneyDown;
                @MoneyDown.canceled += instance.OnMoneyDown;
                @TeleportApartments.started += instance.OnTeleportApartments;
                @TeleportApartments.performed += instance.OnTeleportApartments;
                @TeleportApartments.canceled += instance.OnTeleportApartments;
                @TeleportParking.started += instance.OnTeleportParking;
                @TeleportParking.performed += instance.OnTeleportParking;
                @TeleportParking.canceled += instance.OnTeleportParking;
                @TeleportMall.started += instance.OnTeleportMall;
                @TeleportMall.performed += instance.OnTeleportMall;
                @TeleportMall.canceled += instance.OnTeleportMall;
                @TeleportConyard.started += instance.OnTeleportConyard;
                @TeleportConyard.performed += instance.OnTeleportConyard;
                @TeleportConyard.canceled += instance.OnTeleportConyard;
                @TeleportUnderpass.started += instance.OnTeleportUnderpass;
                @TeleportUnderpass.performed += instance.OnTeleportUnderpass;
                @TeleportUnderpass.canceled += instance.OnTeleportUnderpass;
            }
        }
    }
    public CheatsActions @Cheats => new CheatsActions(this);

    // Menu
    private readonly InputActionMap m_Menu;
    private IMenuActions m_MenuActionsCallbackInterface;
    private readonly InputAction m_Menu_Enter;
    public struct MenuActions
    {
        private @InputActions m_Wrapper;
        public MenuActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Enter => m_Wrapper.m_Menu_Enter;
        public InputActionMap Get() { return m_Wrapper.m_Menu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
        public void SetCallbacks(IMenuActions instance)
        {
            if (m_Wrapper.m_MenuActionsCallbackInterface != null)
            {
                @Enter.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnEnter;
                @Enter.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnEnter;
                @Enter.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnEnter;
            }
            m_Wrapper.m_MenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Enter.started += instance.OnEnter;
                @Enter.performed += instance.OnEnter;
                @Enter.canceled += instance.OnEnter;
            }
        }
    }
    public MenuActions @Menu => new MenuActions(this);
    public interface IPlayerActions
    {
        void OnJump(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnEnableCheats(InputAction.CallbackContext context);
        void OnEscape(InputAction.CallbackContext context);
        void OnShift(InputAction.CallbackContext context);
    }
    public interface ICheatsActions
    {
        void OnSunrise(InputAction.CallbackContext context);
        void OnNoon(InputAction.CallbackContext context);
        void OnSunset(InputAction.CallbackContext context);
        void OnMidnight(InputAction.CallbackContext context);
        void OnMoneyUp(InputAction.CallbackContext context);
        void OnMoneyDown(InputAction.CallbackContext context);
        void OnTeleportApartments(InputAction.CallbackContext context);
        void OnTeleportParking(InputAction.CallbackContext context);
        void OnTeleportMall(InputAction.CallbackContext context);
        void OnTeleportConyard(InputAction.CallbackContext context);
        void OnTeleportUnderpass(InputAction.CallbackContext context);
    }
    public interface IMenuActions
    {
        void OnEnter(InputAction.CallbackContext context);
    }
}
